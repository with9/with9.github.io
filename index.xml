<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>生活和睡觉.</title>
    <link>https://with9.github.io/</link>
    <description>Recent content on 生活和睡觉.</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 14 Jul 2021 03:03:03 +0800</lastBuildDate>
    
	<atom:link href="https://with9.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>About</title>
      <link>https://with9.github.io/about/</link>
      <pubDate>Thu, 16 Apr 2020 21:38:52 +0800</pubDate>
      
      <guid>https://with9.github.io/about/</guid>
      <description>&lt;h1 id=&#34;关于咱&#34;&gt;关于咱&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;吾辈id:with,1997年生&lt;/li&gt;
&lt;li&gt;Email:dc198424601@outlook.com&lt;/li&gt;
&lt;li&gt;&lt;del&gt;喜欢道家,道德经爱好者,目前背诵进度40%&lt;/del&gt;&lt;/li&gt;
&lt;li&gt;Arch邪教成员&lt;/li&gt;
&lt;li&gt;喜欢宅系文化&lt;/li&gt;
&lt;li&gt;愿优雅而纯粹的活着&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;关于小站&#34;&gt;关于小站&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;记录一些杂事&lt;/li&gt;
&lt;li&gt;记录一些读后感&lt;/li&gt;
&lt;li&gt;偶尔翻译一些觉得很有意思的文章,顺便锻炼一下英语&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;猫兄&#34;&gt;猫兄&lt;/h1&gt;
&lt;div class=&#39;align-center&#39;&gt;
&lt;p&gt;&lt;img src=&#34;https://with9.github.io/img/my_cat.jpg&#34; alt=&#34; &#34;&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;  &lt;iframe style=&#34;max-width: 100%&#34;
class=&#34;music163&#34;
frameborder=&#34;no&#34;
border=&#34;0&#34;
marginwidth=&#34;0&#34;
marginheight=&#34;0&#34;
width=&#34;330&#34;
height=&#34;86&#34;
src=&#34;//music.163.com/outchain/player?type=2&amp;id=4937357&amp;auto=0&amp;height=66&#34;&gt;
&lt;/iframe&gt;&lt;/p&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;素晴日的插曲,非常感人的故事(&lt;strong&gt;这是真的&lt;/strong&gt;),&lt;del&gt;强烈推荐萌新去玩&lt;/del&gt;&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</description>
    </item>
    
    <item>
      <title>纯文本写作，随写随引</title>
      <link>https://with9.github.io/post/zotero-cite/</link>
      <pubDate>Wed, 14 Jul 2021 03:03:03 +0800</pubDate>
      
      <guid>https://with9.github.io/post/zotero-cite/</guid>
      <description>&lt;p&gt;&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;  &lt;iframe style=&#34;max-width: 100%&#34;
class=&#34;music163&#34;
frameborder=&#34;no&#34;
border=&#34;0&#34;
marginwidth=&#34;0&#34;
marginheight=&#34;0&#34;
width=&#34;330&#34;
height=&#34;86&#34;
src=&#34;//music.163.com/outchain/player?type=2&amp;id=26111634&amp;auto=0&amp;height=66&#34;&gt;
&lt;/iframe&gt;&lt;/p&gt;
&lt;p&gt;之前介绍了一个文献管理软件(Zotero)，我们可以自由自在的在word中引用和写作。但是我们没有办法很好的在纯文本写作的情况下随写随引。作为一个markdown重度爱好者来说，什么都要在word上写是不可忍受的。&lt;/p&gt;
&lt;h2 id=&#34;简单的引用&#34;&gt;简单的引用&lt;/h2&gt;
&lt;p&gt;markdown写作中，我们可以在需要引用的地方加上&lt;code&gt;[^1]&lt;/code&gt;，然后在文章末尾添加&lt;code&gt;[^1]: 这是一个尾注&lt;/code&gt;，在zotero里面配置好引用样式，然后利用快捷键&lt;code&gt;Ctrl+Shift+C&lt;/code&gt;拷贝到剪贴板，然后粘贴到尾注部分就可以实现一条简单的引用了。&lt;/p&gt;
&lt;!-- ![](/img/.zotero_and_latex/Screenshot_20210714_010708.png)

![](/img/.zotero_and_latex/image-20210714011314627.png) --&gt;
&lt;table&gt;&lt;tr&gt;
&lt;td&gt;&lt;img src=https://with9.github.io/img/.zotero_and_latex/Screenshot_20210714_010708.png &gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=https://with9.github.io/img/.zotero_and_latex/image-20210714011314627.png &gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;h2 id=&#34;bibtex文献管理库&#34;&gt;bibtex文献管理库&lt;/h2&gt;
&lt;p&gt;随便写一些小随笔的时候这样进行文献引用还行，但是一旦涉及到较多文献，或者我们的文章需要反复修改的时候，这样的简单引用就会带来一些问题，比如无法自动编号，没有办法很方便的修改引用文献样式等等，这个时候就是pandoc的用武之地了。pandoc可以实现各种文档格式之间的转换，比如markdown转word，markdown转pdf等等，pandoc还可以支持bibtex文献库的引用。bibtex是latex写作中的文献管理库的文件，这是bibtex文件中的某一条文献的内容。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-latex&#34; data-lang=&#34;latex&#34;&gt;@article&lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;2018zhongguo2xingtangniaobingfangzhizhinan,
  title = &lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;中国2型糖尿病防治指南(2017年版)&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;,
  date = &lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;2018&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;,
  journaltitle = &lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;中国实用内科杂志&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;,
  volume = &lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;38&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;,
  pages = &lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;292--344&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;,
  issn = &lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;1005-2194&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;,
  abstract = &lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;\&amp;amp;&lt;/span&gt;lt;正&lt;span class=&#34;k&#34;&gt;\&amp;amp;&lt;/span&gt;gt;1前言40年来,随着我国人口老龄化与生活方式的
变化,糖尿病从少见病变成一个流行病,糖尿病患病率从1980年的0.67&lt;span class=&#34;k&#34;&gt;\%&lt;/span&gt;飙升至2013年的10.4&lt;span class=&#34;k&#34;&gt;\%&lt;/span&gt;。相应地,科学技术的发展也带来我们对糖尿病的认识和诊疗上
的进步,血糖监测方面从只能在医院检测血糖,发展到持续葡萄糖监测、甚至无
创血糖监测,治疗方面从只有磺脲类、双胍类和人胰岛素等种类很少的降糖药,
到目前拥有二肽基肽酶IV(DPP-4)抑&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;,
  file = &lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;/home/with9/Zotero/storage/TZ5DP3Q4/2018&lt;span class=&#34;nb&#34;&gt;_&lt;/span&gt;中国2型糖尿病防治
指南(2017年版).pdf&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;,
  keywords = &lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;2型糖尿病,guideline,type 2 diabetes,指南&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;,
  langid = &lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;中文;&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;,
  number = &lt;span class=&#34;nb&#34;&gt;{&lt;/span&gt;04&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;首先是&lt;code&gt;@article{key}&lt;/code&gt;说明了这是一篇论文，花括号里面是这条文献的citation-key。接下来是一些详细信息，比如标题，作者，摘要，发表年份等等。我们在需要引用的地方添加&lt;code&gt;[@2018zhongguo2xingtangniaobingfangzhizhinan]&lt;/code&gt;就行了，接着利用pandoc将markdown转换为word就行了。下面是一个具体的pandoc命令。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;pandoc --cite --csl&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$HOME&lt;/span&gt;/bib/nature.csl --bibliography&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$HOME&lt;/span&gt;/bib/my.bib test4.md -o test4.docx
&lt;span class=&#34;c1&#34;&gt;#--cite --csl=后面接引用格式文件。&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#--bibliography后面接我们的bibtex文献管理器&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#然后是mardkdown文件test4.md -o 接输出文件名称&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;大概效果是这样。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://with9.github.io/img/.zotero_and_latex/image-20210714013748389.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;better-bibtex-for-zotero&#34;&gt;better-bibtex for zotero&lt;/h2&gt;
&lt;p&gt;是不是感觉更加麻烦了，bibtex文件要怎么获得，cls文件又是啥。这里就要zoteo的登场啦，首先我们要安装一个插件&lt;a href=&#34;https://retorque.re/zotero-better-bibtex/&#34;&gt;BETTER BIBTEX FOR ZOTERO&lt;/a&gt;，登录官网，下载zotero-better-bibtex-n.n.n.xpi文件到本地，然后打开zotero，点击工具，插件，从文件安装插件，选择下载好的xpi文件就好了。重启zotero后，可以看到每个文献都自动分配了一个citation-key。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://with9.github.io/img/.zotero_and_latex/image-20210714015052778.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;打开首选项的better bibtex，可以对此插件进行一定的配置，推荐将key的格式改成和谷歌学术的一致。 &lt;code&gt;[auth:lower][year][veryshorttitle:lower]&lt;/code&gt;，接下来选择文献库，导出格式选择better-bibtex，勾选keep update，这就是我们的bib文献管理库文件啦。至于csl文件，可以网上找，也可以直接用zotero的，路径在zotero文件夹的style下面。然后对一开始的pandoc命令起个别名就可以开心的写作啦。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;nb&#34;&gt;alias&lt;/span&gt; pandocn &lt;span class=&#34;s1&#34;&gt;&amp;#39;pandoc --cite --csl=$HOME/bib/nature.csl --bibliography=$HOME/bib/my.bib&amp;#39;&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#之后就可以这样调用啦&lt;/span&gt;
pandocn A.md -o A.docx
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;!-- ![](/img/.zotero_and_latex/image-20210714015412520.png)

![](/img/.zotero_and_latex/image-20210714015848499.png) --&gt;
&lt;table&gt;&lt;tr&gt;
&lt;td&gt;&lt;img src=https://with9.github.io/img/.zotero_and_latex/image-20210714015412520.png &gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=https://with9.github.io/img/.zotero_and_latex/image-20210714015848499.png &gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;我们现在写作是比之前方便了一丢丢，但是citation-key要怎么弄呢，难道我们要手动复制吗？当然不用。官网上有一个vim引用的脚本。我们简单的查看一下。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;k&#34;&gt;function&lt;/span&gt;! ZoteroCite&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;
  &lt;span class=&#34;s2&#34;&gt;&amp;#34; pick a format based on the filetype (customize at will)
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;  let format = &amp;amp;filetype =~ &amp;#39;.*tex&amp;#39; ? &amp;#39;citep&amp;#39; : &amp;#39;pandoc&amp;#39;
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;  let api_call = &amp;#39;http://127.0.0.1:23119/better-bibtex/cayw?format=&amp;#39;.format.&amp;#39;&amp;amp;brackets=1&amp;#39;
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;  let ref = system(&amp;#39;curl -s &amp;#39;.shellescape(api_call))
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;  return ref
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;endfunction
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;noremap &amp;lt;leader&amp;gt;z &amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;ZoteroCite&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;&amp;lt;CR&amp;gt;p
inoremap &amp;lt;C-z&amp;gt; &amp;lt;C-r&amp;gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;ZoteroCite&lt;span class=&#34;o&#34;&gt;()&lt;/span&gt;&amp;lt;CR&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;可以看到实际上执行的命令就是&lt;code&gt;curl -s 某个网站&lt;/code&gt;，我们直接在shell中运行一下，跳出一个框框，就和我们在word上面写作没有什么区别。选择好引用的文献后，点击ok。可以看到输出了一个文献的key，那么利用xdotool 和xclip就可以写一个随处引用的小脚本啦。&lt;/p&gt;
&lt;!-- ![](/img/.zotero_and_latex/image-20210714021119575.png)

![](/img/.zotero_and_latex/image-20210714021312563.png) --&gt;
&lt;table&gt;&lt;tr&gt;
&lt;td&gt;&lt;img src=https://with9.github.io/img/.zotero_and_latex/image-20210714021119575.png &gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=https://with9.github.io/img/.zotero_and_latex/image-20210714021312563.png &gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#!/bin/bash -e
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;chars&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;curl -s &lt;span class=&#34;s1&#34;&gt;&amp;#39;http://127.0.0.1:23119/better-bibtex/cayw?format=pandoc&amp;amp;brackets=1&amp;#39;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; -n &lt;span class=&#34;nv&#34;&gt;$chars&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; xclip -selection clipboard &lt;span class=&#34;c1&#34;&gt;#获取key并存在剪切板里面&lt;/span&gt;
sleep 0.4
&lt;span class=&#34;c1&#34;&gt;# xdotool type  &amp;#34;$chars&amp;#34; #一开始试着直接打出来，如果目前是中文输入法的话就会出现一些糟糕的情况，比如「@溜018基于包大豆inzucexuk]，所以选择用粘贴版来处理&lt;/span&gt;

xdotool key ctrl+v &lt;span class=&#34;c1&#34;&gt;#进行粘贴&lt;/span&gt;
copyq remove &lt;span class=&#34;c1&#34;&gt;#我的剪切板管理器，可以无视&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;一些补充&#34;&gt;一些补充&lt;/h2&gt;
&lt;p&gt;接着介绍一下typora的妙用，Typora是一个很不错的markdown文本编辑器，最近发现它的导出可以自定义命令，利用它我们可以实现一些简单的功能，比如自定义导出的pandoc命令。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;pandoc --cite --csl&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$HOME&lt;/span&gt;/bib/nature.csl --bibliography&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$HOME&lt;/span&gt;/bib/my.bib &lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;currentFileFullName&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt; -o &lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;currentFileName&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;.docx &lt;span class=&#34;c1&#34;&gt;#定义导出命令，导出到本地同名的docx文件&lt;/span&gt;
bash &lt;span class=&#34;nv&#34;&gt;$HOME&lt;/span&gt;/my_shell/typorashell/diary &lt;span class=&#34;c1&#34;&gt;#是复制模板md文件生成每天的日记模板，下面是diary脚本&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;#!/bin/bash&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;cur_date&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;`date +%Y-%m-%d`&amp;#34;&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;filename&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$HOME&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;/Documents/Obsidian/Notes/Diary/&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$cur_date&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;.md&amp;#34;&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;dirayname&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$HOME&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;/Documents/Obsidian/Notes/模板/DiaryEx.md&amp;#34;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[[&lt;/span&gt; ! -e &lt;span class=&#34;nv&#34;&gt;$filename&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;then&lt;/span&gt;
    cp &lt;span class=&#34;nv&#34;&gt;$dirayname&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$filename&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;fi&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;最后是修改导出的docx模板，pandoc的文档中提到，pandoc导出成docx文件的时候默认会选择&lt;code&gt;$HOME/.pandoc/reference.docx &lt;/code&gt;文件作为模板，也就是说这里面定义的样式是什么，生成的文件就按什么样式，我们可以在这个文件里面定义好我们的样式，当然pandoc也支持&lt;code&gt;--reference-docx reference.docx &lt;/code&gt;参数来临时选择模板。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;pandoc --print-default-data-file reference.docx &amp;gt; reference.docx &lt;span class=&#34;c1&#34;&gt;#在默认路径下没有看到 reference.docx时候可以通过这个命令来生成。&lt;/span&gt;
pandoc --reference-docx reference.docx A.md -o A.docx#临时调用模板
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;太长不看&#34;&gt;太长不看&lt;/h2&gt;
&lt;p&gt;最后总结一下流程（致太长不看）——此脚本只适用于linux，win应该有类似的，没有研究过&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;下载安装better-bibtex插件，简单配置后导出文献库。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;找到style文件&lt;code&gt;Zotero/styles/*.csl&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;编写xclip，xdotool脚本，也可以直接复制我写的。并绑定桌面快捷键。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#!/bin/bash -e
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;chars&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;curl -s &lt;span class=&#34;s1&#34;&gt;&amp;#39;http://127.0.0.1:23119/better-bibtex/cayw?format=pandoc&amp;amp;brackets=1&amp;#39;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; -n &lt;span class=&#34;nv&#34;&gt;$chars&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; xclip -selection clipboard 
sleep 0.4
xdotool key ctrl+v 
copyq remove 
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在需要引用的地方按快捷键，选择引用文献&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;用pandoc命令将markdown文件转换为docx文件&lt;code&gt;pandoc --cite --csl=你的csl文件路径.csl --bibliography=你的文献库路径.bib A.md -o A.docx&lt;/code&gt;(推荐定义一个别名，typora可以自定义导出命令)&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;蝉在叫，人坏掉(&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</description>
    </item>
    
    <item>
      <title>zotero 写作小教程</title>
      <link>https://with9.github.io/post/zotero-guide/</link>
      <pubDate>Sun, 13 Dec 2020 22:45:48 +0800</pubDate>
      
      <guid>https://with9.github.io/post/zotero-guide/</guid>
      <description>&lt;p&gt;&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;  &lt;iframe style=&#34;max-width: 100%&#34;
class=&#34;music163&#34;
frameborder=&#34;no&#34;
border=&#34;0&#34;
marginwidth=&#34;0&#34;
marginheight=&#34;0&#34;
width=&#34;330&#34;
height=&#34;86&#34;
src=&#34;//music.163.com/outchain/player?type=2&amp;id=527479&amp;auto=0&amp;height=66&#34;&gt;
&lt;/iframe&gt;&lt;/p&gt;
&lt;p&gt;Zotero是一个不错的文献管理器,类似的产品有Endnotes和Mendeley,这二者功能都很强大,但是平台有一定的限制,Endnotes很难在linux平台运行,并且要进行一定的收费,Mendeley可以在linux平台运行,也不用收取费用,但是它的云同步功能在国内来说有点难以使用,同步速度很慢.Zotero相对而言,免费,可以配合坚果云搭建自己的WebDev,多平台同步(Windows,Linux,MacOS,Android..),最强大的是它的插件功能,可以轻松的在浏览网站的时候直接把想要参考的论文导入个人的文献库,同时把论文的Pdf格式作为附件下载下来,除此以外,&lt;del&gt;把Zotero作为一个可以多平台同步的浏览器书签管理器也是不错的选择&lt;/del&gt;.&lt;/p&gt;
&lt;h2 id=&#34;zotero的安装&#34;&gt;zotero的安装&lt;/h2&gt;
&lt;h3 id=&#34;软件安装&#34;&gt;软件安装&lt;/h3&gt;
&lt;p&gt;去往&lt;a href=&#34;https://www.zotero.org&#34;&gt;zotero 官网&lt;/a&gt; 进行下载, 并进行相应的安装.&lt;/p&gt;
&lt;h3 id=&#34;插件安装&#34;&gt;插件安装&lt;/h3&gt;
&lt;p&gt;推荐使用Firefox 浏览器, 用firefox 浏览器打开之前的网站, 点击Download按钮, 跳转到下载页面, 点击Install Firefox Connector, 选在添加安装.&lt;/p&gt;
&lt;h2 id=&#34;zotero的使用&#34;&gt;zotero的使用&lt;/h2&gt;
&lt;p&gt;打开zotero程序, 浏览器打开论文的地址, 点击zotero插件按钮, 就可以分析和下载论文了. 我们可以在知网的检索页点击插件按钮,进行索引文件的保存,也在论文的详情页点击插件按钮.目前位置直接在检索页点击插件还无法选中的文献进行下载.&lt;/p&gt;
&lt;table&gt;&lt;tr&gt;
&lt;td&gt;&lt;img src=https://with9.github.io/img/zotero/1.png &gt;&lt;center&gt;检索页&lt;/center&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=https://with9.github.io/img/zotero/2.png &gt;&lt;center&gt;详情页&lt;/center&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;对于一些外文的文献还支持通过索引找到原始pdf文件,不过知网的中文文献我没有成功过,使用过程可以见下图.大部分的外文文献基本都可以成功.&lt;/p&gt;
&lt;table&gt;&lt;tr&gt;
&lt;td&gt;&lt;img src=https://with9.github.io/img/zotero/5.png &gt;&lt;center&gt;右键获得可用pdf文件&lt;/center&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=https://with9.github.io/img/zotero/6.png &gt;&lt;center&gt;论文页&lt;/center&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;h3 id=&#34;cnkijs文件更新&#34;&gt;cnki.js文件更新&lt;/h3&gt;
&lt;p&gt;原生的版本对于中国知网的支持不是特别好,可以从github上的一个名叫&lt;a href=&#34;https://github.com/l0o0/translators_CN&#34;&gt;translocators_CN&lt;/a&gt;的项目下载cnki.js并替换本地版本,可以通过打开zotero主界面的编辑-&amp;gt; 高级-&amp;gt; 文件和文件夹寻找到本地的cnki.js文件. 这个替代文件可以实现caj 文件的pdf 转换并进行下载的功能.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://with9.github.io/img/zotero/7.png&#34; alt=&#34; &#34; title=&#34;数据库&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;word引用&#34;&gt;word引用&lt;/h3&gt;
&lt;p&gt;一般来说安装的过程中已经自动下载并安装好了word的插件,如果没有安装好的话,可以考虑从编辑-&amp;gt;首选项-&amp;gt;引用-&amp;gt;文字处理软件中进行下载和安装.插件安装好后,打开word文档,在需要插入引用的地方点击add citation,第一次会跳出样式选择按钮,这里的引用格式都不太合适,我们点击管理样式,获取更多样式,里面搜索national natural science foundation of china,或者7714,但是后者英语论文使用过程中会存在作者名称完全大写的情况.&lt;/p&gt;
&lt;table&gt;&lt;tr&gt;
&lt;td&gt;&lt;img src=https://with9.github.io/img/zotero/11.png &gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=https://with9.github.io/img/zotero/12.png &gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;p&gt;接着在要引用地方点击add citation 按钮, 在需要呈现参考文献的地方点击add bibliography 按钮, 呈现论文, 顺便可以在样式浏览里面浏览不同的参考文献规则样式.&lt;/p&gt;
&lt;h2 id=&#34;一些小改进&#34;&gt;一些小改进&lt;/h2&gt;
&lt;p&gt;打开zotero 程序, 我们可以看到知网下载的中文论文中存在将作者的姓和名分开的情况, 如果后续打算导入mendeley 或者通过姓名重命名文件的话, 非常的不美观,为了解决这一问题,我们可以找到cnki.js 文件, 找到如下内容, 添加注释并增加一行, 达到右图的标准, 应该就可以解决这个问题了.&lt;/p&gt;
&lt;table&gt;&lt;tr&gt;
&lt;td&gt;&lt;img src=https://with9.github.io/img/zotero/15.png &gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=https://with9.github.io/img/zotero/16.png &gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;h2 id=&#34;配合坚果云实现多平台云同步&#34;&gt;配合坚果云实现多平台云同步&lt;/h2&gt;
&lt;p&gt;国内网络推荐用坚果云的第三方应用管理实现多平台同步.&lt;/p&gt;
&lt;h3 id=&#34;windows以及linux平台的设置&#34;&gt;Windows以及Linux平台的设置&lt;/h3&gt;
&lt;p&gt;首先注册并登录坚果云账号,在主界面打开账号信息,切换到安全选项页面,在最下面添加一个叫做zotero的应用. 然后打开Zotero应用程序-&amp;gt;编辑-&amp;gt;首选项-&amp;gt;同步,勾选文件同步并选择使用WebDAV,在下面的输入框中添加信息&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;URL:https://dav.jianguoyun.com/dav/zotero(zotero不需要额外填写)
用户名:坚果云注册的邮箱
密码:刚刚添加的zotero应用时自动生成的密码,而不是坚果云的密码

&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;填写完毕后点击验证服务器,不出意外的外就设置成功了.&lt;del&gt;出意外的化或用关键词互联网可以找到很多的解决方案&lt;/del&gt;&lt;/p&gt;
&lt;h3 id=&#34;android以及ipados的配置&#34;&gt;Android以及IpadOS的配置&lt;/h3&gt;
&lt;p&gt;安卓应用的话推荐&lt;a href=&#34;https://github.com/mickstar/Zoo-For-Zotero&#34;&gt;Zoo for Zotero&lt;/a&gt;,安装后右上角WdbDAV Setup填写和桌面平台一样的信息(注意这里URL填写中需要手动写包括zotero的完整路径).&lt;/p&gt;
&lt;p&gt;Ipad可以使用papership应用,从应用商店搜索并安装papership,打开后选择用zotero登录,登录账号. 然后在设置-Zotero File Hosting中切换到WebDAV, 填写和桌面平台一样的信息(仅填写https://dav.jianguoyun.com/dav/,不用加上zotero,&lt;del&gt;加上了也会提示你删除&lt;/del&gt;)。点击验证服务器,然后&amp;hellip;&amp;hellip;不出意外的话你应该会得到一个错误,401或者404, 解决方法可以参考&lt;a href=&#34;https://www.jianshu.com/p/880ab833a0ba&#34;&gt;这篇博客&lt;/a&gt;,打开坚果云网站,在zotero文件夹下新建一个空白的文本文件lastsync.txt,等一段时间后再在papership里面验证就可以了.&lt;/p&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;顺便安利一下天国的minori社作品Eden的插曲&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</description>
    </item>
    
    <item>
      <title>Surface-Laptop3 安装Archlinux折腾小记</title>
      <link>https://with9.github.io/post/sl3-arch/</link>
      <pubDate>Fri, 19 Jun 2020 15:34:00 +0800</pubDate>
      
      <guid>https://with9.github.io/post/sl3-arch/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://with9.github.io/img/SL3Arch.png&#34; alt=&#34;  &#34;&gt;&lt;/p&gt;
&lt;p&gt;仅个人折腾小记,实际操作有多出需要替换&lt;/p&gt;
&lt;h2 id=&#34;系统迁移&#34;&gt;系统迁移&lt;/h2&gt;
&lt;p&gt;由于资金不足, 购买的SL3容量不足以安装双系统, 因此我的做法是双硬盘双系统, 内置硬盘依然是win10, 外接硬盘为Arch.&lt;/p&gt;
&lt;h3 id=&#34;刻录启动盘&#34;&gt;刻录启动盘&lt;/h3&gt;
&lt;p&gt;网上教程应该很多, linux下直接dd命令即可, win下推荐rufus工具进行刻录. 有一个神器叫ventory也不错, 可以试试看.&lt;/p&gt;
&lt;h3 id=&#34;分区&#34;&gt;分区&lt;/h3&gt;
&lt;p&gt;通过u盘启动旧电脑,对新磁盘进行分区, 初步分为三个区&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;/dev/sdb1 boot分区 2-3G足已 格式 fat32&lt;/li&gt;
&lt;li&gt;/dev/sdb2 root分区 90G 格式ext4&lt;/li&gt;
&lt;li&gt;剩下都是home分区 格式ext4&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;通过dd命令将旧电脑的boot分区, root分区, home分区迁移到新磁盘.&lt;/p&gt;
&lt;h2 id=&#34;安装准备工作&#34;&gt;安装准备工作&lt;/h2&gt;
&lt;p&gt;由于SL3和原版的linux内核不是特别适配, 直接u盘启动安装你会发现, 内置键盘无法识别, 无法挂载ext4, ntfs分区等问题. 还好已经有大佬们做好了可以直接用的修改内核了.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/linux-surface/linux-surface&#34;&gt;项目地址&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;linux-surface仓库提前准备好linux-surface内核&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://pkg.surfacelinux.com/arch/&#34;&gt;https://pkg.surfacelinux.com/arch/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/linux-surface/linux-surface/master/pkg/keys/surface.asc&#34;&gt;https://raw.githubusercontent.com/linux-surface/linux-surface/master/pkg/keys/surface.asc&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;把linux-surface linux-surface-headers 相关文件保存在boot目录下(因为笔者测试安装过程中仅fat32分区可以正常挂载).&lt;/p&gt;
&lt;p&gt;安装结束后推荐添加linux-surface仓库可&lt;a href=&#34;https://github.com/linux-surface/linux-surface/wiki/Package-Repositories&#34;&gt;参考此链接&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;安装&#34;&gt;安装&lt;/h2&gt;
&lt;p&gt;需要外置键盘&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;关闭secure boot（先按住F4再开机即可进入Uefi固件设置）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;挂载磁盘的boot分区&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;安装linux-surface&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;    pacman-key --add surface.asc
    pacman-key --finger 56C464BAAC421453
    pacman-key --lsign-key 56C464BAAC421453
    pacman -U linux-surface,linux-surface-headers相关文件
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;然后就可以愉快的挂载ext4分区了&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;    mount /dev/sda2 /mnt
    mount /dev/sda1 /mnt/boot
    mount /dev/sda3 /mnt/home
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;生成新的fstab文件&lt;code&gt;genfstab -U /mnt  &amp;gt; /mnt/etc/fstab&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;安装grub&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;务必装在原win10的efi目录下, 否则会无法引导win10&lt;/li&gt;
&lt;li&gt;chroot &lt;code&gt;arch-chroot /mnt&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;再一次安装linux-surface内核&lt;/li&gt;
&lt;li&gt;挂载内置硬盘的efi分区 &lt;code&gt;mount /dev/nvme0n1p1 /winefi&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grub-install --target=x86_64-efi --efi-directory=/winefi --bootloader-id=grub&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;将生成在boot分区的多个img文件及grub目录移动到winefi分区根目录下.&lt;/li&gt;
&lt;li&gt;生产grub.cfg文件.&lt;code&gt;grub-mkconfig -o /winefi/grub/grub.cfg&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;接着开机应该就会自动从grub进行引导了, 并且保留有windows boot loader选项方便直接进入windows系统.&lt;/p&gt;
&lt;h2 id=&#34;一些小问题&#34;&gt;一些小问题&lt;/h2&gt;
&lt;p&gt;至此,基本安装已经完成了,但是还存在一些小问题,linux-surface的wiki也大部分给出了解决方法.&lt;/p&gt;
&lt;h3 id=&#34;reboot会卡死在开机logo画面&#34;&gt;reboot会卡死在开机logo画面.&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;解决方法,grub.cfg文件中加入reboot=pci&lt;/li&gt;
&lt;li&gt;类似这样linux   /vmlinuz-linux-surface root=UUID=0329c27d-c10f-46da-bcf9-611c721de08e rw reboot=pci&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;待机或睡眠后触摸屏无法使用&#34;&gt;待机或睡眠后触摸屏无法使用&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;原因是ipts相关模块挂载问题&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;通过sleep脚本可以解决&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;修改或新建/lib/systemd/system-sleep/sleep文件&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#!/bin/sh
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$1&lt;/span&gt; in
  pre&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
    modprobe -r mei
    modprobe -r ipts
    modprobe -r surface_sam_sid#可以防止touchpad无法双指右键
  post&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
    modprobe mei
    modprobe ipts
    modprobe surface_sam_sid
&lt;span class=&#34;k&#34;&gt;esac&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;双系统时间不同步&#34;&gt;双系统时间不同步&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;sudo timedatectl set-local-rtc &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;
sudo hwclock --systohc --localtime
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;disablewhiletyping-not-work&#34;&gt;DisableWhileTyping not work&lt;/h3&gt;
&lt;p&gt;参考这个issue&lt;a href=&#34;https://github.com/linux-surface/linux-surface/issues/67&#34;&gt;Disable touchpad whilst typing does not work on SL3 Intel #67
&lt;/a&gt;&lt;br&gt;
新建文件/etc/libinput/local-overrides.quirks:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Matches both Surface Laptop keyboards as well as type covers.&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;Microsoft Surface Keyboard&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;MatchName&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;*Microsoft Surface * Keyboard*
&lt;span class=&#34;nv&#34;&gt;MatchDMIModalias&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;dmi:*svnMicrosoftCorporation:*
&lt;span class=&#34;nv&#34;&gt;AttrKeyboardIntegration&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;internal
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;code&gt;libinput list-devices&lt;/code&gt;找到Keyboard的event序号,比如/dev/input/event10&lt;br&gt;
执行命令&lt;code&gt;libinput quirks list /dev/input/event10&lt;/code&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>[译]Linux 桌面是如何发展的?</title>
      <link>https://with9.github.io/post/how-linux-desktop-grown/</link>
      <pubDate>Wed, 03 Jun 2020 17:48:04 +0800</pubDate>
      
      <guid>https://with9.github.io/post/how-linux-desktop-grown/</guid>
      <description>&lt;p&gt;翻译自&lt;a href=&#34;https://opensource.com/article/19/8/how-linux-desktop-grown&#34;&gt;opensource&lt;/a&gt;的一篇文章，作者是: Jim Hall ，非常有趣，介绍了Linux桌面的发展历史。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Since the early 1990s, the Linux desktop has matured from a simple window manager to a full desktop. Join us on a journey through the history of the Linux desktop.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;从20世纪90年代以来，Linux桌面已经从简单的窗口管理器成熟为完整的桌面了，让我们一起来回顾一下Linux桌面的历史吧。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://opensource.com/sites/default/files/styles/image-full-size/public/lead-images/1980s-computer-yearbook.png?itok=eGOYEKK-&#34; alt=&#34; &#34; title=&#34;LSE Library. Modified by Opensource.com. CC BY-SA 4.0&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Image by :&lt;/strong&gt;&lt;/em&gt; &lt;em&gt;LSE Library. Modified by Opensource.com. CC BY-SA 4.0&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I first installed Linux in 1993. At that time, you really didn&amp;rsquo;t have many options for installing the operating system. In those early days, many people simply copied a running image from someone else. Then someone had the neat idea to create a &amp;ldquo;distribution&amp;rdquo; of Linux that let you customize what software you wanted to install. That was the Softlanding Linux System (SLS) and my first introduction to Linux.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我第一次安装Linux是在1993年。那时候，对于安装系统，你确实没有太多选择。大家安装Linux系统都是简单的拷贝其他人正在运行的磁盘映像(&lt;em&gt;Image&lt;/em&gt;)。后来某人有了个非常秒的想法：创造一个Linux发行版(&lt;em&gt;Linux Distributions&lt;/em&gt;)使得我们可以自定义想要安装的软件。那就是&lt;strong&gt;软着落Linunx 系统&lt;/strong&gt;(&lt;em&gt;Softlanding Linux System,SLS&lt;/em&gt;)，这也是我第一次接触到的Linux。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;My &amp;lsquo;386 PC didn&amp;rsquo;t have much memory, but it was enough. SLS 1.03 required 2MB of memory to run, or 4MB if you wanted to compile programs. If you wanted to run the X Window System, you needed a whopping 8MB of memory. And my PC had just enough memory to run X.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我的&#39;386 电脑内存不是很多，但是足够安装SLS， SLS1.03的运行内存要求是2MB，但是如果你想要编译程序的话，那么你需要4MB内存。如果是要运行X 窗口系统(&lt;em&gt;X Window System&lt;/em&gt;)，那么你需要8MB的内存。我的电脑配置刚好可以运行X 窗口系统。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;As I&amp;rsquo;d grown up with the command line, a graphical user interface wasn&amp;rsquo;t essential to me. But it sure was convenient. I could run applications in different windows and easily switch between tasks.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;由于我是从命令行(&lt;em&gt;command line&lt;/em&gt;)过来的，所以图形用户界面(&lt;em&gt;graphical user interface&lt;/em&gt;)对我来说并不是必不可少的。但是图形界面确实非常方便。我可以在不同的窗口运行程序，也可以轻松的切换任务。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;From my first experiment with Linux, I was hooked. I&amp;rsquo;ve stuck with Linux on my desktop ever since. Like many people, I ran Linux in a dual-boot configuration for a while so I could jump back to MS-DOS and Windows to run certain programs. Until 1998, when I finally took the plunge and went all-in with Linux.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;第一次使用Linux的时候，我就被深深吸引了。自此以后，Linux就一直在我的电脑中。和许多人一样，我通过双引导配置(&lt;em&gt;dual-boot configuration&lt;/em&gt;)来运行Linux，这样的话，我可以方便切回MS-DOS 和Windows 系统来运行某些特定程序。直到1998年我才完全放弃其他系统。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Over the last 26 years, I have watched the Linux desktop mature. I&amp;rsquo;ve also tried an interesting combination of desktop environments over that time, which I&amp;rsquo;ll share by taking a journey through the history of the Linux desktop.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在过去的26年，我见证了Linux桌面的成长。在那段时间里面，我也尝试了各种桌面环境，下面我会在介绍Linux桌面历史的同时分享我的经历。&lt;/p&gt;
&lt;h1 id=&#34;x和桌面管理器&#34;&gt;X和桌面管理器&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;The first &amp;ldquo;desktops&amp;rdquo; on Linux weren&amp;rsquo;t yet desktops. Instead, they were &lt;em&gt;window managers&lt;/em&gt; running on the X Window System. X provided the basic building blocks for a graphical user interface, such as creating windows on the screen and providing keyboard and mouse input. By itself, X didn&amp;rsquo;t do much. To make the X graphical environment useful, you needed a way to manage all the windows in your session. That&amp;rsquo;s where the &lt;em&gt;window manager&lt;/em&gt; came in. Running an X program like xterm or xclock opens that program in a window. The window manager keeps track of windows and does basic housekeeping, such as letting you move windows around and minimize them. The rest is up to you. You could launch programs when X started by listing them in the &lt;strong&gt;~/.xinitrc&lt;/strong&gt; file, but usually, you&amp;rsquo;d run new programs from an xterm.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Linux的第一个&amp;quot;桌面&amp;quot;还不是桌面。准确说，它们是运行在X 桌面系统(&lt;em&gt;X Window System&lt;/em&gt;)的窗口管理器(&lt;em&gt;window managers&lt;/em&gt;)。 X提供了诸如在屏幕上创建窗口这样的图形用户界面的基本构建块， 同时也提供了键盘和鼠标的输入。 X自身没有做什么。 为了使用X图形环境(&lt;em&gt;X graphical environment&lt;/em&gt;)， 你需要某种方法来管理会话(session)中的所有的窗口。 那就是窗口管理器。 运行一个诸如xterm或xclock的图形程序时，它会在一个窗口打开这个程序。 窗口管理器跟踪这些窗口并提供基本的内务服务(&lt;em&gt;basic housekeeping&lt;/em&gt;)， 诸如在窗口间切换以及最小化。 剩下的取决于你啦。 你可以通过把它们添加进&lt;code&gt;~/.xinitrc&lt;/code&gt;文件，使得运行X的时候打开这些程序， 不过通常来说，你会从&lt;a href=&#34;https://invisible-island.net/xterm/&#34;&gt;xterm&lt;/a&gt;来运行新程序。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The most common window manager in 1993 was TWM, which dates back to 1988. TWM was quite simple and provided only basic window management.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;1993年最受欢迎的窗口管理器是&lt;a href=&#34;https://wiki.archlinux.org/index.php/Twm&#34;&gt;TWM&lt;/a&gt;，它于1988年问世。&lt;/p&gt;
&lt;p&gt;TWM非常简陋，只提供基本窗口管理。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://opensource.com/sites/default/files/uploads/twm-sls105.png&#34; alt=&#34; &#34; title=&#34;TWM on SLS 1.05&#34;&gt;&lt;/p&gt;
&lt;div class=&#39;align-center&#39;&gt;
&lt;p&gt;&lt;strong&gt;TWM on SLS 1.05 showing xterm, xclock, and the Emacs editor&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Yet another early window manager was the OpenLook Virtual Window Manager (OLVWM). OpenLook was a graphical user interface developed by Sun Microsystems in the 1980s and later ported to other Unix platforms. As a &lt;em&gt;virtual&lt;/em&gt; window manager, OLVWM supported multiple workspaces.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;另一个早期的桌面管理器是OpenLook桌面管理器(&lt;em&gt;OpenLook Virutal Window Manager&lt;/em&gt;,OLVWM).OpenLook是&lt;a href=&#34;%5Bhttps://zh.wikipedia.org/wiki/%E6%98%87%E9%99%BD%E9%9B%BB%E8%85%A6%5D(https://zh.wikipedia.org/wiki/%E6%98%87%E9%99%BD%E9%9B%BB%E8%85%A6)&#34;&gt;太阳计算机系统&lt;/a&gt;(Sun MIcrosystems)上世纪80年代开发的图形用户界面，之后也被移植到其他Unix平台。作为一个虚拟图形管理器，OLVWM支持多个工作区。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://opensource.com/sites/default/files/uploads/olvwm-sls105.png&#34; alt=&#34;&#34; title=&#34;OLVWM on SLS 1.05&#34;&gt;&lt;/p&gt;
&lt;div class=&#39;align-center&#39;&gt;
&lt;p&gt;&lt;strong&gt;OLVWM on SLS 1.05 showing xterm and the Virtual Workspaces selector&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;When Linux began to grow in popularity, it didn&amp;rsquo;t take long for others to create new window managers with smoother performance and improved interfaces. The first of these new window managers was FVWM, a virtual window manager. FVWM sported a more modern look than TWM or OLVWM. But we didn&amp;rsquo;t yet have a desktop.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;当Linux逐渐普及的时候，人们很快创建了具有更加流畅的性能和改进的用户界面的新的窗口管理器。第一个新的窗口管理器是FVWM，相比TWM和OLVWM，它有更加时尚的界面。但是我们还是没有得到真正的桌面。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://opensource.com/sites/default/files/uploads/fvwm-sls105.png&#34; alt=&#34;&#34; title=&#34;FVWM on SLS 1.05&#34;&gt;&lt;/p&gt;
&lt;div class=&#39;align-center&#39;&gt;
&lt;p&gt;&lt;strong&gt;FVWM on SLS 1.05 showing xterm and a file manager&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;To modern eyes, TWM and FVWM may look pretty plain. But it&amp;rsquo;s important to remember what other graphical environments looked like at the time. The then-current version of Windows looked rather simple. Windows versions 1 through 3 used a plain launcher called the Program Manager.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;用现在的眼光来看，TWM和FVWM可能看起来非常的简陋。但是如果我们看一下同时代的其他图形环境你就会改变看法啦。当时的Windows版本看起来更加简陋。Windows 1 到Windows 3 使用一个称为程序管理器(&lt;em&gt;Program Manage&lt;/em&gt;r)的简单启动器。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://opensource.com/sites/default/files/uploads/win311.png&#34; alt=&#34;&#34; title=&#34;Windows 3.11&#34;&gt;&lt;/p&gt;
&lt;div class=&#39;align-center&#39;&gt;
&lt;p&gt;&lt;strong&gt;Windows 3.11 showing the Program Manager and the Notepad editor&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;In August 1995, Microsoft released Windows 95 and changed the modern PC desktop landscape. Certainly, I was impressed. I thought Windows 3.x was ungainly and ugly, but Windows 95 was smooth and pretty. More importantly, Windows 95 was what we now consider a desktop. The new desktop metaphor was a huge step forward. You could put icons on the desktop—and in fact, Windows 95 presented two default desktop icons, for My Computer (to open a file manager) and the Recycle Bin (where you put files to be deleted later).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;1995年8月，微软发布了Windows95，它改变当时的电脑桌面布局。我认为Windows 3.X是不够优雅或者说是丑陋的，但是我认为Windows95是优雅并且美丽的。更重要的是，Windows95就是我们现在所认为的桌面应该的样子。新的&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E6%A1%8C%E9%9D%A2%E6%AF%94%E6%93%AC&#34;&gt;桌面比拟&lt;/a&gt;(&lt;em&gt;Desktop Metaphor&lt;/em&gt;)向前迈进了一大步。你可以把图标放在桌面上，Windows95预先放置了两个默认的桌面图标  &lt;ruby&gt;
    &lt;rb&gt;我的电脑&lt;/rb&gt;
    &lt;rt&gt;My Computer&lt;/rt&gt;
    &lt;/ruby&gt;(打开  &lt;ruby&gt;
    &lt;rb&gt;文件管理器&lt;/rb&gt;
    &lt;rt&gt;file manager&lt;/rt&gt;
    &lt;/ruby&gt;)和  &lt;ruby&gt;
    &lt;rb&gt;回收站&lt;/rb&gt;
    &lt;rt&gt;Recycle bin&lt;/rt&gt;
    &lt;/ruby&gt;(里面放置你稍后将删除的文件)。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;But more importantly, the Windows 95 desktop meant &lt;em&gt;integration&lt;/em&gt;. The Program Manager was gone, replaced by a Taskbar at the bottom of the screen that let you launch new programs using a simpler Start menu. The Taskbar was multifunctional and also showed your running programs via a series of buttons and a dock showing the time, speaker volume, and other simple controls. You could right-click on any object on the new desktop, and Windows 95 would present you with a context-sensitive menu with actions you could perform.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;更重要的是,Windows95桌面意味着集成(&lt;em&gt;integration&lt;/em&gt;)。程序管理器消失了，取而代之的是桌面底下的一个任务栏(&lt;em&gt;Taskbar&lt;/em&gt;)，你可以通过点击开始菜单(&lt;em&gt;Start Menu&lt;/em&gt;)来打开一个新的程序。任务栏是多功能的，上面有一系列的按钮来显示你正在运行的程序，还有一个小的托盘(&lt;em&gt;Dock&lt;/em&gt;)，上面有展示时间，控制音量和一些其他功能的小控件。你可以在桌面上的任何对象上右键点击鼠标，Windows95会展现出一个相关菜单，其中包含有你可以执行的操作。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://opensource.com/sites/default/files/uploads/win95.png&#34; alt=&#34;&#34; title=&#34;Windows 95&#34;&gt;&lt;/p&gt;
&lt;div class=&#39;align-center&#39;&gt;
&lt;p&gt;&lt;strong&gt;Windows 95 showing the Notepad editor&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;The Windows 95 interface was slick and much easier to use than previous versions of Windows—and even other Linux window managers. Not to be outdone, Linux developers created a new version of FVWM that mimicked the Windows 95 interface. Called FVWM95, the new window manager still wasn&amp;rsquo;t a desktop, but it looked very nice. The new taskbar let you start new X programs using the Start menu. The taskbar also showed your running programs using buttons similar to Windows 95&amp;rsquo;s.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Windows95的界面非常的优雅，并且比起之前的Windows版本和Linux窗口管理器更加易于使用。为了不被淘汰，Linux开发者开发了新版本的FVWM，它在界面上模仿了Windows95。 它被称作FVWM95，尽管看起来非常优美，但它仍不是真的桌面。新的任务栏使你可以通过开始菜单运行图形程序。它也采用了类似Windows95的方式，用按钮展示你正在运行的程序。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://opensource.com/sites/default/files/uploads/fvwm95-rh52.png&#34; alt=&#34;&#34; title=&#34;FVWM95 on Red Hat Linux 5.2&#34;&gt;&lt;/p&gt;
&lt;div class=&#39;align-center&#39;&gt;
&lt;p&gt;&lt;strong&gt;FVWM95 on Red Hat Linux 5.2 showing xterm and a quick-access program launcher with icons for xterm, the file manager, and other programs&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;While FVWM95 and other window managers were improving, the core problem remained: Linux didn&amp;rsquo;t really have a desktop. It had a collection of window managers, and that was about it. Linux applications that used a graphical user interface (GUI, pretty much meaning they were X applications) all looked different and worked differently. You couldn&amp;rsquo;t copy and paste from one application to another, except the simple text-only copy/paste provided by the X Window System. What Linux really needed was a complete redo in its GUI to create the first desktop.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;尽管FVWM95和其他窗口管理器在不断的改进，但是核心问题依然没有解决——Linux没有真正的桌面。它有一组桌面管理器，仅此而已。用图形界面(&lt;em&gt;Graphical user interface&lt;/em&gt;   GUI)的Linux应用看起来不同，他们的工作方式也不一样。除了X桌面系统提供的简单文字拷贝以外，你不能从一个应用程序里面拷贝内容到另一个应用程序。Linux真正需要的是GUI的完全重构，从而可以创造出第一个真正意义上的桌面。&lt;/p&gt;
&lt;h1 id=&#34;the-first-linux-desktop&#34;&gt;The first Linux desktop&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;In 1996, Matthias Ettrich was troubled by the inconsistency of Linux applications under X. He wanted to make the graphical environment easy to use. And more importantly, he wanted to make everything integrated—like an actual desktop.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;1996年，马蒂亚斯·埃特里希(&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E9%A9%AC%E8%92%82%E4%BA%9A%E6%96%AF%C2%B7%E5%9F%83%E7%89%B9%E9%87%8C%E5%B8%8C&#34;&gt;Matthias Ettrich&lt;/a&gt;)对于图形界面下的Linux应用程序不一致很是困扰。他希望使图形环境更加易于使用。最重要的是，他希望让一切整合在一起——就像正真的桌面一样。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Matthias started work on the K Desktop Environment. That&amp;rsquo;s K for &amp;ldquo;Kool.&amp;rdquo; But the name KDE was also meant to be a play on the Common Desktop Environment (CDE) that was the standard in the &amp;ldquo;Big Unix&amp;rdquo; world. Although by 1996, CDE was looking pretty dated. CDE was based on the Motif widget set, which is the same design that FVWM mimicked. Finalized in July 1998, KDE 1.0 was a definite improvement over plain window managers like FVWM95.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;马蒂亚斯开始研究K桌面环境(&lt;em&gt;K DesktopEnvironment&lt;/em&gt;)。&amp;ldquo;K&amp;quot;的意思是&amp;quot;Kool&amp;rdquo;。KDE这个名字也意味着它可以在广大的Unix世界的通用桌面环境(&lt;em&gt;Common Desktop Environment&lt;/em&gt; CDE)中发挥作用。尽管已经到了1996年，CDE仍然看起来非常的过时。CDE基于主题部件集(&lt;em&gt;Motif widget set&lt;/em&gt;)，和FVWM的设计一样。KDE1.0完成于1998年，相对于FVWM等简陋的桌面管理器来说，它是十足的进步。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://opensource.com/sites/default/files/uploads/kde1.png&#34; alt=&#34;&#34; title=&#34;KDE 1.0&#34;&gt;&lt;/p&gt;
&lt;div class=&#39;align-center&#39;&gt;
&lt;p&gt;&lt;strong&gt;K Desktop Environment (KDE) version 1.0&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Image credit: Paul Brown / KDE&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;KDE was a big step forward for Linux. Finally, Linux had a true desktop with application integration and more modern desktop icons. KDE&amp;rsquo;s design was not dissimilar from Windows 95. You had a kind-of taskbar along the bottom of the screen that provided the equivalent of Windows 95&amp;rsquo;s Start menu as well as several application shortcuts. KDE also supported virtual desktops, which were cleverly labeled One, Two, Three, and Four. Running applications were represented via buttons in a separate taskbar at the top of the screen.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;KDE是Linux系统向前迈进了一大步。Linux从此拥有了具有应用整合与现代化的桌面图标的正真桌面。KDE的设计与Windows 95并不不同。你可以在屏幕底部看到一个任务栏，它提供类似windows 95的开始菜单的功能，同时上面也有一些应用的快捷方式。 KDE还支持虚拟桌面，通过标签一，标签二，标签三，标签四的方式清晰的展示着。正在运行的程序会通过屏幕顶部单独的任务栏中的按钮表示出来。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;But not everyone was happy with KDE. To abstract the GUI from the system, KDE used Trolltech&amp;rsquo;s Qt toolkit library. Unfortunately, Qt was not distributed under a free software license. Trolltech allowed Qt to be used at no charge in free software applications but charged a fee to use it in commercial or proprietary applications. And that dichotomy is not aligned with free software. This caused problems for Linux distributions: Should they include KDE? Or default to an older but free software graphical user interface like FVWM?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;但是不是所有人都对KDE感到满足。为了从屏幕中抽提GUI，KDE使用了奇趣科技(&lt;em&gt;Trolltech&lt;/em&gt;)的Qt工具包库。遗憾的是，Qt不是以免费软件授权(&lt;em&gt;free software license&lt;/em&gt;)的方式进行发行的。奇趣科技允许在自由软件免费使用Qt，但是在商业使用或者私有软件中会收取费用。这种分别对待的措施与自由软件理念不符。这导致了Linux发行版的一个问题:它们应不应该默认包含KDE，还是选择依旧默认包含一个比较老旧，但是完全自由的图形用户界面(比如FVWM)呢?&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In response, Miguel de Icaza and Federico Mena started work in 1997 on a new Linux desktop. The new project was dubbed GNOME, for GNU Network Object Model Environment. GNOME aimed to be completely free software and used a different toolkit, called GTK, from the GIMP image editor. GTK literally stood for GIMP Tool Kit. When GNOME 1.0 was finally released in 1999, Linux had another modern desktop environment.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;为此，米格尔·德伊卡萨( &lt;em&gt;Miguel de Icaza&lt;/em&gt;)和费德里科·梅纳(&lt;em&gt;Federico Mena&lt;/em&gt;)于1997年开始研究一个新的Linux桌面。这个项目就是GNOME，意思是GNU网络对象模型环境(&lt;em&gt;GNU Network Object Model&lt;/em&gt;)。GNOME的目标是打造一个完全自由的软件，它使用GIMP图像编辑器中一个称作GTK的新工具组(&lt;em&gt;toolkit&lt;/em&gt;)。GTK字面意思是GIMP的工具组。1999年，随着第一版的GNOME最终发行，Linux有了另一个现代的桌面。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://opensource.com/sites/default/files/uploads/gnome10.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;div class=&#39;align-center&#39;&gt;
&lt;p&gt;&lt;strong&gt;GNOME version 1.0&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;Image credit: GNOME Documentation Project&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;While it was great to have two desktop environments for Linux, the &amp;ldquo;KDE versus GNOME&amp;rdquo; rivalry continued for some time. By 1999, Trolltech re-released the Qt library under a new public license, the Q Public License (QPL). But the new license carried its own baggage—the QPL only applied to Qt&amp;rsquo;s use in open source software projects, not commercial projects. Thus the Free Software Foundation deemed the QPL not compatible with the GNU General Public License (GNU GPL). This licensing issue would remain until Trolltech re-re-released the Qt library under the GNU GPL version 2 in 2000.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;有两个Linux桌面环境固然很棒，但“ KDE与GNOME”的竞争仍持续了一段时间。 1999年奇趣科技根据新的公共许可证(Q 公共许可证(QPL))重新发布了Qt工具库。 但是新的许可证仅适用于Qt在开源项目中使用， 不适用于商业项目。 因此自由软件基金组织认为QPL与GPL不兼容。 这个问题持续到2000年，奇趣科技在这一年根据GPL发行了第二版的Qt工具库。&lt;/p&gt;
&lt;h1 id=&#34;development-over-time&#34;&gt;Development over time&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;The Linux desktop continued to mature. KDE and GNOME settled into a friendly competition that pushed both to add new features and to exchange ideas and concepts. By 2004, both GNOME and KDE had made significant strides, yet brought only incremental changes to the user interface.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Linux桌面在不断的发展。 KDE与GNOME开始了一场友谊竞赛， 这场竞赛推动了二者新特性的增加，也加强了二者间想法和概念的交流。 到2004年， GNOME和KDE都获得了巨大的进步， 不过仅仅是对用户界面的一些小修改。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;KDE 2 and 3 continued to rely on a taskbar concept at the bottom of the screen but incorporated the buttons for running applications. One of KDE&amp;rsquo;s most visible changes was the addition of the Konqueror browser, which first appeared in KDE 2.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;KDE 2和3继续依赖屏幕底部的任务栏概念， 但并入了用于运行应用程序的按钮。 KDE的一大视觉变化是加入了Konqueror浏览器， 它第一次登场是在KDE 2。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://opensource.com/sites/default/files/uploads/kde_2.2.2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;div class=&#39;align-center&#39;&gt;
&lt;p&gt;&lt;strong&gt;KDE 2.2.2 (2001) showing the Konqueror browser&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;Image credit: Paul Brown / KDE&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;img src=&#34;https://opensource.com/sites/default/files/uploads/kde322-fc2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;div class=&#39;align-center&#39;&gt;
&lt;p&gt;&lt;strong&gt;KDE 3.2.2 (2004) on Fedora Core 2 showing the Konqueror file manager (using a Fedora Core 2 theme)&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;GNOME 2 also used a taskbar concept but split the bar into two: a taskbar at the top of the screen to launch applications and respond to desktop alerts, and a taskbar at the bottom of the page to show running applications. On my own, I referred to the two taskbars as &amp;ldquo;things you can do&amp;rdquo; (top) and &amp;ldquo;things are you doing&amp;rdquo; (bottom). In addition to the streamlined user interface, GNOME also added an updated file manager called Nautilus, developed by Eazel.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;GNOME 2也使用了任务栏的概念，但是它将任务栏分成了两部分: 一个任务栏在屏幕顶端，显示桌面提醒; 另一个在页面的底部，显示正在运行的应用。 对我来说，我认为这两个任务栏分别是&amp;quot;你可以做的事&amp;quot;(顶部)和&amp;quot;你正在做的事&amp;quot;(底部)。 除了简化的用户界面外， GNOME还加入了最新的文件管理器——Nautilus， 该管理器由Eazel公司开发。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://opensource.com/sites/default/files/uploads/gnome26-fc2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;div class=&#39;align-center&#39;&gt;
&lt;p&gt;&lt;strong&gt;GNOME 2.6.0 (2004) on Fedora Core 2 showing the Nautilus file manager (using a Fedora Core 2 theme)&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Over time, KDE and GNOME have taken different paths. Both provide a feature-rich, robust, and modern desktop environment—but with different user interface goals. In 2011, there was a major deviation between how GNOME and KDE approached the desktop interface. KDE 4.6 (January 2011) and KDE 4.7 (July 2011) provided a more traditional desktop metaphor while continuing to rely on the taskbar concept familiar to many users. Of course, KDE saw lots of changes under the hood, but the familiar look and feel remained.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;随着时间的推移，KDE和GNOME采取了不同的方法，以不同的用户界面目标同时开发了界面丰富，强大现代的桌面环境。在2011年，GNOME和KDE处理桌面界面的方式之间存在重大差异。KDE4.6（2011.1）和KDE（2011.7）提供了一个更加传统的&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E6%A1%8C%E9%9D%A2%E6%AF%94%E6%93%AC&#34;&gt;桌面比拟&lt;/a&gt;，同时继续保留许多用户熟悉的任务管理器概念。当然，KDE虽然发生了很多引擎上的变化，但是仍然保留用户熟悉的外观。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://opensource.com/sites/default/files/uploads/kde46.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;div class=&#39;align-center&#39;&gt;
&lt;p&gt;KDE 4.6 showing the Gwenview image viewer&lt;br&gt;
Image credit: KDE&lt;/p&gt;
&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;In 2011, GNOME completely changed gears with a new desktop concept. GNOME 3 aimed to create a simpler, more streamlined desktop experience, allowing users to focus on what they were working on. The taskbar disappeared, replaced by a black status bar at the top of the screen that included volume and network controls, displayed the time and battery status, and allowed users to launch new programs via a redesigned menu.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在2011年，GNOME则完全改变了它的桌面概念。GNOME 3旨在创建更简单，更简化的桌面体验，它允许用户集中于正在进行的活动。任务管理器被一个在屏幕顶部的状态栏替代，它包括有音量和网络控制，同时展示时间和电池状态，并且允许用户通过重新设计的用户菜单打开新的程序。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The menu was the most dramatic change. Clicking the Activities menu or moving the mouse into the Activities &amp;ldquo;hot corner&amp;rdquo; showed all open applications as separate windows. Users could also click an Applications tab from the Overview to start a new program. The Overview also provided an integrated search function.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;菜单是最戏剧性的变化。点击活动菜单或者把鼠标移动到“热区”，可以展示所用打开的应用，他们会以单独窗口的形式展示出来。用户也可以通过点击总览界面的应用标签来打开一个新的程序。总览界面也提供整合搜索的功能。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://opensource.com/sites/default/files/uploads/gnome30.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;div class=&#39;align-center&#39;&gt;
&lt;p&gt;GNOME 3.0 showing the GNOME Pictures application&lt;br&gt;
Image credit: GNOME&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;img src=&#34;https://opensource.com/sites/default/files/uploads/gnome30-overview.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;div class=&#39;align-center&#39;&gt;
&lt;p&gt;GNOME 3.0 showing the Activities Overview&lt;br&gt;
Image credit: GNOME&lt;/p&gt;
&lt;/div&gt;
&lt;h1 id=&#34;your-choice-of-desktop&#34;&gt;Your Choice of desktop&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;Having two desktops for Linux means users have great choice. Some prefer KDE and others like GNOME. That&amp;rsquo;s fine. Pick the desktop that best suits you.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;拥有两个Linux桌面意味着用户有很多选择。一些人喜欢KDE，一些人更喜欢GNOME，这都没有问题。选择适合你的就行。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;To be sure, both KDE and GNOME have fans and detractors. For example, GNOME received a fair bit of criticism for dropping the taskbar in favor of the Activities Overview. Perhaps the most well-known critic was Linus Torvalds, who &lt;a href=&#34;https://www.theregister.co.uk/2011/08/05/linus_slams_gnome_three/&#34;&gt;loudly denounced and abandoned&lt;/a&gt; the new GNOME as an &amp;ldquo;unholy mess&amp;rdquo; in 2011—before &lt;a href=&#34;https://www.phoronix.com/scan.php?page=news_item&amp;amp;px=MTMxNjc&#34;&gt;moving back&lt;/a&gt; to GNOME two years later.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;当然，二者既有拥护者也有反对者。举个例子，GNOME因为用活动概述替代任务栏而受到了很多的批评。最出名的批评来自林纳斯·托瓦兹，他在2011年大声谴责并放弃新的GNOME，将其视为“邪恶的混乱”，两年后他回归了GNOME。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Others have made similar criticisms of GNOME 3, to the point that some developers forked the GNOME 2 source code to create the MATE desktop. MATE (which stands for MATE Advanced Traditional Environment) continues the traditional taskbar interface from GNOME 2.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;其他人对GNOME3也作出了相似的批评，以至于有些开发人员分叉GNOME 2源代码来创建MATE桌面。MATE桌面从GNOME2延续了传统的任务栏界面。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Regardless, there&amp;rsquo;s no doubt that the two most popular Linux desktops today are KDE and GNOME. Their current versions are both very mature and packed with features. Both KDE 5.16 (2019) and GNOME 3.32 (2019) try to simplify and streamline the Linux desktop experience—but in different ways. GNOME 3.32 continues to aim for a minimal appearance, removing all distracting user interface elements so users can focus on their applications and work. KDE 5.16 takes a more familiar approach with the taskbar but has added other visual improvements and flair, especially around improved widget handling and icons.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;不管如何，毫无疑问当今最受欢迎的Linux桌面环境是KDE和GNOME。他们的当今版本都很成熟，并且充满特色。KDE 5.16和GNOME 3.32都从不同角度尝试简化Linux桌面体验。GNOME3.32继续追求外观最小化，通过删除所有会使用户分心的元素来确保用户可以专注于应用和工作。KDE 5.16采用用户更加熟悉的任务栏，但是增加了一些视觉上的改动，尤其是改进了小部件和图标。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://opensource.com/sites/default/files/uploads/kde516.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;div class=&#39;align-center&#39;&gt;
&lt;p&gt;KDE 5.16 Plasma&lt;br&gt;
Image credit: KDE&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;img src=&#34;https://opensource.com/sites/default/files/uploads/gnome332.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;div class=&#39;align-center&#39;&gt;
&lt;p&gt;GNOME 3.32&lt;br&gt;
Image credit: GNOME&lt;/p&gt;
&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;At the same time, you don&amp;rsquo;t completely lose out on compatibility. Every major Linux distribution provides compatibility libraries, so you can run applications from, say, KDE while running GNOME. This is immensely useful when an application you really want to use is written for the other desktop environment—not a problem; you can run KDE applications on GNOME and vice versa.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;同一时间，你不需要牺牲兼容性。每个主流Linux发行版都提供兼容性库，因此你可以运行GNOME的同时运行KDE。当你想要运行的程序是为其他桌面环境所写的时候，这很有用。您可以在GNOME上运行KDE应用程序，反之亦然。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I don&amp;rsquo;t see this changing anytime soon. And I think that&amp;rsquo;s a good thing. Healthy competition between KDE and GNOME has allowed developers in both camps to push the envelope. Whether you use KDE or GNOME, you have a modern desktop with great integration. And above all, this means Linux has the best feature in free software: choice.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我认为这种情况不会很快改变。同时我认为这是一件好事。KDE和GNOME的良性竞争使这两个阵营的开发人员都可以挑战极限。无论您使用KDE还是GNOME，您都将拥有一个具有高度集成性的现代化桌面。最重要的是，这意味着Linux在自由软件中具有的最佳功能：选择。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Friends</title>
      <link>https://with9.github.io/friends/</link>
      <pubDate>Thu, 23 Apr 2020 00:37:16 +0800</pubDate>
      
      <guid>https://with9.github.io/friends/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://with9.github.io/img/56884409_p0.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;hahahugoshortcode-s0-hbhb-link&#34;&gt;  &lt;ruby&gt;
    &lt;rb&gt;Friends&lt;/rb&gt;
    &lt;rt&gt;jī yǒu&lt;/rt&gt;
    &lt;/ruby&gt; Link&lt;/h1&gt;
&lt;div class=&#34;admonition note&#34;&gt;&lt;p class=&#34;admonition-title&#34;&gt;with&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://with9.github.io&#34;&gt;生活和睡觉.&lt;/a&gt;&lt;br&gt;
&lt;a href=&#34;https://with9.gitee.io&#34;&gt;生活和睡觉&lt;/a&gt;&lt;br&gt;
两个没有什么差别:)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;admonition note&#34;&gt;&lt;p class=&#34;admonition-title&#34;&gt;sirius1242&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://sirius1242.github.io/&#34;&gt;sirius1242&lt;/a&gt;&lt;br&gt;
Teeworlds认识的大佬, 用的是ArchLinux&lt;br&gt;
&lt;del&gt;聊天群补番推荐小能手&lt;/del&gt;&lt;/p&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>川端康成的《岁岁年年》有感</title>
      <link>https://with9.github.io/post/suisuiniannian/</link>
      <pubDate>Fri, 17 Apr 2020 01:38:15 +0800</pubDate>
      
      <guid>https://with9.github.io/post/suisuiniannian/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://with9.github.io/img/p52319166.jpg&#34; alt=&#34; &#34;&gt;&lt;/p&gt;
&lt;p&gt;这本书的原文标题直译的话应该是《日兮月兮》，这里王述坤将其翻译成了《岁岁年年》，我觉得这样翻译比直接翻译成《日兮月兮》更好一点，中国的读者通过岁岁年年这四个字马上就会联想到《代悲白头翁》里面的”年年岁岁花相似，岁岁年年人不同”，全书也基本是围绕着”人不同”的物是人非这一主题。&lt;/p&gt;
&lt;p&gt;作品是川端康成五十年代的作品，相对与战前的作品，这部作品的物哀味道更加直接和浓厚，全书一开始给我的感觉与《千羽鹤》的感觉很接近，也是从茶会开始。父亲朝井带着因为被男友抛弃的女儿松子参加光悦寺的茶会。茶会中有详细的描述壁笼内的一幅雪舟(日本的一个画僧)画的山水画，上面留着雪舟昔日好友了庵桂梧的赞诗，八十三岁的佛日国师(了庵)思念起了两位故人(雪舟与牧松)，联想到了自己的老境，于是写下了画赞诗&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;诗画寻常欲遗情， 人间何地卜长生。&lt;br&gt;
层峦叠嶂剑铓矗， 极浦回塘屏障横。&lt;br&gt;
径路岩隈蟠缭绕， 楼台树荫耸峥嵘。  &lt;br&gt;
牧松遣韵雪舟逝， 天末残崖春梦惊。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;大概介绍一下全文开始之前的人物关系吧，主要人物包括女主角松子，她的父亲朝井，以及松子的母亲道子，松子的前恋人宗广，母亲的情人绀野，宗光的弟弟幸二，宗广的妻子卷子，父亲的朋友木崎老人和他年轻的妻子。道子本来是父亲朝井远方亲戚家的姑娘，家道中落来到朝井家作为保姆，后来与父亲结婚，或许是因为二者的年龄过于悬殊，母亲于后来私奔到了继子好友绀野的公寓中同居;宗广与松子有过肌肤之亲，后来抛弃了松子与卷子结婚，三天后吐血，与卷子虽然同床异梦但是对她毫无感情，最终使他陷入了悲观的深渊，住进了疗养院;宗广的妻子卷子对于松子很是嫉妒,导致其放浪形骸,逐渐堕落;父亲的另外两个儿子(也就是松子的同父异母的两个哥哥)在战场战死。&lt;/p&gt;
&lt;p&gt;全书的开始与结尾描述的均是光悦寺举办的茶会，第一次是松子和父亲一起去的，期间遇到了幸二。第二次是一年后了，期间，松子父亲在一次外出中无意看到了道子，突发脑溢血去世;宗广与卷子离婚，重新纠缠上松子，最后自杀;道子因为前夫(朝井)的去世良心不安，产生愧疚，重新和女儿一起生活。最后幸二和松子参加了第二年的茶会。&lt;/p&gt;
&lt;p&gt;全书很有一种日式悲剧的一种含蓄美，一切悲剧似乎都可以被避免，假如松子按照母亲之前的愿望与绀野结婚，那么母亲就不会与绀野私奔，那么父亲也就不会因为看到前妻而脑溢血去世了，宗广也不会因为之后的事情而自杀了。&lt;/p&gt;
&lt;p&gt;全书中我最感兴趣的人物是作为宗广弟弟的幸二，他在很多时候只是充当了松子，卷子，宗广之间的传话筒，松子哥哥曾经写信给幸二，希望他可以和松子结婚，但是在传话过程中他隐瞒了这个这点，隐瞒的动机作者并没有介绍。最后的一次茶会，幸二给松子发送了邀请帖，松子也接受了，但是她知道他们之间没有了可能性，松子这时候已经在心里做好了决定。&lt;/p&gt;
&lt;p&gt;其中父亲葬礼上山崎老人送了一幅字画，“生死事大，无常迅速”，舍弃生死才是一种大解脱，川端康成具有一种佛教生死观，作品里面很多地方都有提示，这也某种程度上暗示了最后他自杀的结局。&lt;/p&gt;
&lt;p&gt;这本书以前的翻译叫做《日兮月兮》，有一种日日如此月月恒常之意，松子母亲曾经在家里地位十分底下，如奴隶一般，而在两个继子去世后，父亲才重新开始珍视松子母亲，这个时候母亲选择了与继子的大学同学绀野私奔，对一种自由的迷乱向往，后来父亲去世，母亲对父亲的死产生愧疚，绀野对此产生了嫉妒，导致与亲生女儿松子见面都要十分小心翼翼，加之之前私奔的风评，镰仓对于母亲就像是一个地狱之墙一般，母亲又一次落入的悲剧的深渊，最后与绀野分开，与女儿相依为命。女儿松子的命运也十分悲惨，开始遭到宗广的抛弃，后来又遭到他的纠缠，最后宗广的自杀,成为了松子一生无法摆脱锁链，松子在旅社做的恶梦，似乎也在暗示松子的命运。母亲私奔造成父亲死亡，松子离去造成宗广的身亡，死者给予生者的力量是可怕的。&lt;/p&gt;
&lt;p&gt;第二年同样的一场茶会，但是去的人与之前已经发生了太多的变化了。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Archlinux迁移到LVM</title>
      <link>https://with9.github.io/post/hello/</link>
      <pubDate>Thu, 16 Apr 2020 09:10:18 +0800</pubDate>
      
      <guid>https://with9.github.io/post/hello/</guid>
      <description>&lt;p&gt;由于一开始各种诡异的折腾电脑方式,导致我系统的根目录在最后一个分区,并且快满了,无法扩容,因此就打算移动到前面的位置,并且直接迁移到lvm,一劳永逸.&lt;/p&gt;
&lt;p&gt;本文是个人用来记录的日志,里面有一些自己踩到的坑,与大家分享一下,讲的不是很全面,如果想要照着迁移的话,最起码要可以照着wiki独立安装archlinux系统
&lt;img src=&#34;https://with9.github.io/img/56866134_p0.jpg&#34; alt=&#34; &#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;提前准备&#34;&gt;提前准备&lt;/h2&gt;
&lt;p&gt;制作u盘启动盘,命令&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;dd &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;./archlinux.iso &lt;span class=&#34;nv&#34;&gt;of&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;/dev/sdb
&lt;span class=&#34;c1&#34;&gt;#将iso文件内容写入u盘,制作启动盘&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;用分区工具先空出合适的空间,推荐gparted,一个很简单的分区工具.
准备就绪,重启从u盘启动系统&lt;/p&gt;
&lt;h2 id=&#34;lvm分区&#34;&gt;lvm分区&lt;/h2&gt;
&lt;h3 id=&#34;创建物理卷&#34;&gt;创建物理卷&lt;/h3&gt;
&lt;p&gt;用合适的分区工具对之前留下的空白区域新建分区,分区格式为Linux LVM.
然后在刚刚创建的分区里面创建物理卷(PV)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;pvcreate /dev/sda6 
pvdisplay#可以用该命令列出已经创建的物理卷
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;创建卷组&#34;&gt;创建卷组&lt;/h3&gt;
&lt;p&gt;在刚刚创建的物理卷上创建卷组(VG)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;vgcreate vg00 /dev/sda6 &lt;span class=&#34;c1&#34;&gt;#此命令利用sda6分区创建一个名称为vg00的卷组&lt;/span&gt;
vgextend vg00 /dev/sda5 &lt;span class=&#34;c1&#34;&gt;#此命令可以将vg00卷组扩展到其他物理卷&lt;/span&gt;
vgdisplay &lt;span class=&#34;c1&#34;&gt;#列出已经创建的卷组&lt;/span&gt;
vgcreate vg00 /dev/sda6 /dev/sda5 &lt;span class=&#34;c1&#34;&gt;#也可以用此命令直接在多个物理卷的一个卷组&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;创建逻辑卷lv&#34;&gt;创建逻辑卷(LV)&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;lvcreate -L &amp;lt;卷大小&amp;gt; &amp;lt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;卷组名&amp;gt; -n &amp;lt;卷名&amp;gt; #命令格式如此
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;eg. lvcreate -L 60G vg00 -n lvroot #在vg00卷组中创建名称为lvroot的逻辑卷,大小为60G
&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;lvcreate -l +100%FREE vg00 -n lvhome #将vg00卷组剩余容量全部给lvhome逻辑卷.
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;系统迁移&#34;&gt;系统迁移&lt;/h3&gt;
&lt;p&gt;接着将原root分区的内容直接写入新的分区,dd命令是直接以非常简单的方式把输入端的内容完全写到复制端,如果是分区的话,那么是把整个分区内容写入输入端,而不是文件,因此新创建的root逻辑卷必须要比原root分区大,不只是比已用空间大.比如原root分区大小为60G,使用不到10G,依然会读取60G的内容写入新的逻辑卷.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;dd &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; /dev/sda7 &lt;span class=&#34;nv&#34;&gt;of&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;/dev/vg00/lvroot &lt;span class=&#34;c1&#34;&gt;#将原root分区内容写入新的root分区&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;此命令过后lvroot分区内容会和旧root分区一模一样,挂载后运行&lt;code&gt;df -h &lt;/code&gt;命令,你会发现和旧分区大小一模一样,无论我们分了多少空间给新的root分区,文件系统都会识别为旧root分区的大小,我们用resize2fs命令来调整文件系统的大小,使得其达到逻辑卷的大小.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;resize2fs /dev/vg00/lvroot
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;挂载root分区到/mnt boot分区到/mnt/boot,并从u盘系统切换到新的系统&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;mount /dev/vg00/lvroot /mnt
mount /dev/sda1 /mnt/boot
arch-chroot /mnt
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;配置mkinitcpio&#34;&gt;配置mkinitcpio&lt;/h3&gt;
&lt;p&gt;修改mkinitcpio文件,因为你的根文件系统基于LVM，需要启用适当的&lt;a href=&#34;https://wiki.archlinux.org/index.php/Mkinitcpio&#34;&gt;mkinitcpio&lt;/a&gt;钩子，否则系统可能无法启动。&lt;/p&gt;
&lt;p&gt;修改配置文件,添加systemd和sd-lvm2两个钩子&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;/etc/mkinitcpio.conf
&lt;span class=&#34;nv&#34;&gt;HOOKS&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=(&lt;/span&gt;base *systemd* ... block *sd-lvm2* filesystems&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;

mkinitcpio -P &lt;span class=&#34;c1&#34;&gt;#重新生成initramfs&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;修改fstab文件,将根目录挂载到新分区.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;/etc/fstab
&lt;span class=&#34;c1&#34;&gt;# /dev/mapper/vg00-lvroot UUID=299cd25f-28f7-4a5f-bea8-0afa2e017f67&lt;/span&gt;
/dev/mapper/vg00-lvroot /               ext4            rw,relatime     &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;修改引导文件&#34;&gt;修改引导文件&lt;/h3&gt;
&lt;p&gt;重新生成grub引导文件&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;grub-mkconfig -o /boot/grub/grub.cfg
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;由于lvm下的thin_check问题,导致默认的10s rootdelay会不够,还没有找到新的root分区前就会报错,我们修改rootdelay ,在这行的最后添加&lt;code&gt;rootdelay=60&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;/boot/grub/grub.cfg
&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt;    &lt;span class=&#34;s1&#34;&gt;&amp;#39;Loading Linux linux ...&amp;#39;&lt;/span&gt;
linux   /vmlinuz-linux &lt;span class=&#34;nv&#34;&gt;root&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;/dev/mapper/vg00-lvroot rw  quiet *rootdelay&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;60*
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;推出chroot环境,重启就行了,如果电脑上有为win系统的话,此时是无法找到的,并且还会找到旧的root分区系统,可以格式化也可以留着并且新建boot目录(注意,不是作为grub引导的分区),并安装内核,重启后再次运行&lt;code&gt;grub-mkconfig&lt;/code&gt;命令&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>记一次arch升级图标滚挂的修复经历</title>
      <link>https://with9.github.io/post/arch-icon-repair/</link>
      <pubDate>Sun, 19 May 2019 16:08:21 +0800</pubDate>
      
      <guid>https://with9.github.io/post/arch-icon-repair/</guid>
      <description>&lt;p&gt;&lt;del&gt;&lt;strong&gt;置顶一下最后说的话:Arch大法好!&lt;/strong&gt;&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;系统好久没有滚一下了,于是输入了&lt;code&gt;pacman -Syu&lt;/code&gt;滚了一下系统,有一些小冲突,没有特别在意的替换了,然后开机一开始一切顺利,就是图标出现了各种的问题,好多应用图标发生了丢失,变成了这个样子.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://with9.github.io/img/arch-repair/1.png&#34; alt=&#34;  &#34;&gt;&lt;/p&gt;
&lt;p&gt;一些应用是好的,一些丢失了,一开始我以为是因为图标包的问题,然后就下了几个其他的图标包,问题还是存在,而且应用完全没有用图标包,而是用了hicolor的原始图标,甚至有些图标包一使用桌面直接崩溃..&lt;/p&gt;
&lt;p&gt;首先,我以为是用户配置的问题,就把.config文件夹重新命名了下,发现还是一样的问题,而且切换某些图标包后,无法进入桌面,终端修改后才可以进入,明显不是简单的用户配置的问题.&lt;/p&gt;
&lt;p&gt;我还试着用了下之前备份的更目录的icons覆盖这个目录,发现也没有用.
没有办法,我先试试看编辑.desktop可不可以修复单独的一个应用问题..,没有找到网易云的图标,随便网上下了个,似乎成功了&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://with9.github.io/img/arch-repair/2.png&#34; alt=&#34;  &#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://with9.github.io/img/arch-repair/3.png&#34; alt=&#34;  &#34;&gt;&lt;img src=&#34;https://with9.github.io/img/arch-repair/4.png&#34; alt=&#34;  &#34;&gt;&lt;/p&gt;
&lt;p&gt;就在我屈服于此,打算一个一个把常用的应用都手动修复下,在修复tim的时候,通过cuttlefish找到了电脑里面存在的svg图标(顺便吐槽一下这个图标预览器自己图标也丢失了&amp;hellip;&amp;hellip;.),并没有像之前的网易云那样直接被修复.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://with9.github.io/img/arch-repair/7.png&#34; alt=&#34;  &#34;&gt;&lt;/p&gt;
&lt;p&gt;当时很困惑,我顺着打开了&lt;code&gt;/usr/share/icons/hicolor&lt;/code&gt;文件夹,发现凡是png格式的应用图标都可以显示,而svg格式的应用图标都无法正常显示
&lt;img src=&#34;https://with9.github.io/img/arch-repair/8.png&#34; alt=&#34;  &#34;&gt;&lt;/p&gt;
&lt;p&gt;到这里,我感觉我终于发现了突破口,毫无疑问,一定和svg有所关系,于是网上寻找svg有关的包,发现有一个librsvg,猜测可能是系统更新的时候这个包因为冲突没有安装什么的,先直接pacman安装看看,结果居然它已经存在了,然后站在aur上中找到了librsvg-git的包,重新编译安装了下,注销一下重新登录,一切都修复啦..&lt;/p&gt;
&lt;p&gt;最后截一张修复好了的图.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://with9.github.io/img/arch-repair/9.png&#34; alt=&#34; &#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>linux下midi键盘的使用问题</title>
      <link>https://with9.github.io/post/midi-config/</link>
      <pubDate>Mon, 01 Oct 2018 15:50:28 +0800</pubDate>
      
      <guid>https://with9.github.io/post/midi-config/</guid>
      <description>&lt;p&gt;最近打算把封印了快一年的midi键盘拿出来练下,拿出来才发现,我的系统换成了debian,还不知道要怎么链接midi键盘,果断网上搜索 关键词midi键盘 linux系统,,果然没有想freepiano这样子的傻瓜软件&amp;hellip;.结果看到一些教程,但是都不详细,就是说qsynth+jack+timidity+vmpk这几个配合起来,先不管了,首先先apt安装这些,发现大部分都是预装上的&amp;hellip;&lt;/p&gt;
&lt;p&gt;下面讲一下我折腾了快两天得出来的经验教程,首先我们打开qjackctl软件,应该是一个控制音频接口的软件吧,一些教程讲这里直接点start,再打开vmpk就可以弹琴了,这是不行的,(我试过了,jack会报错..)&lt;/p&gt;
&lt;p&gt;我们先什都不用管,接着打开vmpk,编辑里面链接,midi输入为我们的midi键盘,然后上面的允许midi thru转发到midi输入点上钩钩,然后确认&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://with9.github.io/img/midi/1.png&#34; alt=&#34; &#34;&gt;&lt;/p&gt;
&lt;p&gt;接着我们再回到qjckctl,点击connect,到标签的ALSA下面,将midi键盘的输入接到vmpk的输出(&lt;strong&gt;一定要在qsynth打开前接入,要不然会无法链接过去,原理不太清楚,我被这个坑了好久&lt;/strong&gt;).&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://with9.github.io/img/midi/2.png&#34; alt=&#34; &#34;&gt;&lt;/p&gt;
&lt;p&gt;接着打开qsynth,点击setup,soundfonts(音源)打开我们下载好的音源,我的是freepats上面的kawai钢琴音源(要求sf2格式的,诸如sfz这些格式好像不可以),&lt;/p&gt;
&lt;p&gt;然后保存设置,接着回到qjackctl,点击start,然后点击connect,标签切换到Audio,将fluidsynth链接到system的输入,再切换到ALSA,发现右边的输入接口多了一个fluidsynth,将它于vmpk的输出接口连在一起,&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://with9.github.io/img/midi/4.png&#34; alt=&#34; &#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://with9.github.io/img/midi/5.png&#34; alt=&#34; &#34;&gt;&lt;/p&gt;
&lt;p&gt;大功告成,&lt;del&gt;可以开始练习啦&lt;/del&gt;.附全家福(雾)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://with9.github.io/img/midi/6.png&#34; alt=&#34; &#34;&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>